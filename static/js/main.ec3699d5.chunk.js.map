{"version":3,"sources":["logo.svg","components/Description/Description.jsx","components/SongList/Song.jsx","components/SongList/SongList.jsx","App.js","index.js"],"names":["Description","className","src","likeCountAdd","urls","setArray","id","likeCount","localStorage","getItem","setItem","copy","Array","from","Like","likeCountRemove","MultiPlayer","useState","map","url","audio","Audio","SongLink","sources","playing","players","setPlayers","useEffect","forEach","source","i","play","pause","addEventListener","newPlayers","removeEventListener","targetIndex","currentIndex","findIndex","p","useMultiAudio","toggle","players1","sort","a","b","player","onClick","Title","Artist","Album","Data","SongList","songs","array","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec3699d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport \"./Description.css\"\r\n\r\nexport default function Description() {\r\n\r\n\r\n  return (\r\n    <div className=\"description\">\r\n      <img className=\"descriptionImage\" src=\"55510c2d0710e.jpg\"></img>\r\n      <div className=\"text descriptionText\">\r\n        <div>\r\n          Playlist\r\n        </div>\r\n        <div className=\"text mainDescription\">\r\n          10 year Anniversary: Behind-the-Scenes of \"The Drunken Dance of Modern Man in Love\"\r\n        </div>\r\n        <div className=\"text\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus interdum nunc eu sapien tincidunt vehicula. Ut convallis in purus eu cursus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Maecenas semper est vitae dolor vehicula.\r\n        </div>\r\n        <div className=\"text\">\r\n          Created by: Yan Kavalenkau 24 songs, 55 min\r\n        </div>\r\n        <div className=\"text\">\r\n          <button className=\"buttonPause\">Pause</button>\r\n          <button className=\"buttonEllipsis\">...</button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\nconst useMultiAudio = urls => {\r\n  const [sources] = useState(\r\n    urls.map(url => {\r\n      return {\r\n        url,\r\n        audio: new Audio(url.SongLink),\r\n      }\r\n    }),\r\n  )\r\n\r\n  const [players, setPlayers] = useState(\r\n    urls.map(url => {\r\n      return {\r\n        url,\r\n        playing: false,\r\n      }\r\n    }),\r\n  )\r\n\r\n  const toggle = targetIndex => () => {\r\n    const newPlayers = [...players]\r\n    const currentIndex = players.findIndex(p => p.playing === true)\r\n    if (currentIndex !== -1 && currentIndex !== targetIndex) {\r\n      newPlayers[currentIndex].playing = false\r\n      newPlayers[targetIndex].playing = true\r\n    } else if (currentIndex !== -1) {\r\n      newPlayers[targetIndex].playing = false\r\n    } else {\r\n      newPlayers[targetIndex].playing = true\r\n    }\r\n    setPlayers(newPlayers)\r\n  }\r\n\r\n  useEffect(() => {\r\n    sources.forEach((source, i) => {\r\n      players[i].playing ? source.audio.play() : source.audio.pause()\r\n    })\r\n  }, [sources, players])\r\n\r\n  useEffect(() => {\r\n    sources.forEach((source, i) => {\r\n      source.audio.addEventListener('ended', () => {\r\n        const newPlayers = [...players]\r\n        newPlayers[i].playing = false\r\n        setPlayers(newPlayers)\r\n      })\r\n    })\r\n    return () => {\r\n      sources.forEach((source, i) => {\r\n        source.audio.removeEventListener('ended', () => {\r\n          const newPlayers = [...players]\r\n          newPlayers[i].playing = false\r\n          setPlayers(newPlayers)\r\n        })\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  return [players, toggle]\r\n}\r\n\r\nconst MultiPlayer = ({ urls, setArray }) => {\r\n  const [players, toggle] = useMultiAudio(urls)\r\n\r\n  const players1 = players.sort((a, b) => a.url.Like <= b.url.Like ? 1 : -1)\r\n\r\n\r\n  return (\r\n    <div>\r\n      {players1.map((player, i) => (\r\n        <div key={i} className=\"SongString\">\r\n          <button onClick={toggle(i)}>{player.playing ? 'Stop' : 'Play'}</button>\r\n          <div className=\"songInfo\">{player.url.Title}</div>\r\n          <div className=\"songInfo\">{player.url.Artist}</div>\r\n          <div className=\"songInfo\">{player.url.Album}</div>\r\n          <div className=\"songInfo\">{player.url.Data}</div>\r\n          <div onClick={() => likeCountAdd(urls, setArray, +player.url.id)}>Like</div>\r\n          <div onClick={() => likeCountRemove(urls, setArray, +player.url.id)}>Dislike</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction likeCountAdd(urls, setArray, id) {\r\n  let likeCount = localStorage.getItem(id);\r\n  likeCount = +likeCount + 1\r\n  localStorage.setItem(id, likeCount);\r\n  const copy = Array.from(urls)\r\n  copy[id].Like++\r\n\r\n  setArray(copy)\r\n}\r\n\r\nfunction likeCountRemove(urls, setArray, id) {\r\n  let likeCount = localStorage.getItem(id);\r\n  likeCount = +likeCount - 1\r\n  localStorage.setItem(id, likeCount);\r\n  const copy = Array.from(urls)\r\n  copy[id].Like--\r\n\r\n  setArray(copy)\r\n}\r\n\r\n\r\n\r\nfunction Player({ player, toggle }) {\r\n  let likeCount = localStorage.getItem(player.url.id);\r\n  if (!likeCount) localStorage.setItem(player.url.id, 0);\r\n\r\n\r\n  return (\r\n    <div className=\"SongString\">\r\n      <button onClick={toggle}>{player.playing ? 'Stop' : 'Play'}</button>\r\n      <div className=\"songInfo\">{player.url.Title}</div>\r\n      <div className=\"songInfo\">{player.url.Artist}</div>\r\n      <div className=\"songInfo\">{player.url.Album}</div>\r\n      <div className=\"songInfo\">{player.url.Data}</div>\r\n      <div onClick={() => likeCountAdd(player.url.id)}>Like</div>\r\n      <div onClick={() => likeCountRemove(player.url.id)}>Dislike</div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default MultiPlayer","\r\nimport React, { useState } from 'react'\r\nimport MultiPlayer from \"./Song\";\r\nimport \"./SongList.css\"\r\n\r\nexport default function SongList() {\r\n\r\n  const songs = [\r\n    {\r\n      id: 0,\r\n      SongLink: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3',\r\n      Title:\r\n        'Lazing on a Sunday Afternoon',\r\n      Artist: 'Chris',\r\n      Album: 'A Night at the Opera',\r\n      Data: '13 days ago',\r\n      Like: localStorage.getItem(0),\r\n    },\r\n    {\r\n      id: 1,\r\n      SongLink: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3',\r\n      Title:\r\n        'Seaside Rendezvous ',\r\n      Artist: 'Andrey',\r\n      Album: 'A Night at the Opera',\r\n      Data: '13 days ago',\r\n      Like: localStorage.getItem(1),\r\n    },\r\n  ]\r\n\r\n  songs.map((player, i) => {\r\n    if (!localStorage.getItem(i)) {\r\n      localStorage.setItem(i, 0)\r\n    }\r\n  }\r\n  )\r\n\r\n\r\n  const [array, setArray] = useState(songs);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <MultiPlayer\r\n        urls={array}\r\n        setArray={setArray}\r\n      />\r\n    </div>\r\n  )\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Description from './components/Description/Description';\r\nimport SongList from './components/SongList/SongList';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Description />\r\n      <SongList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}